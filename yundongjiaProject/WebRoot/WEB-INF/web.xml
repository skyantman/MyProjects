<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"> 
	<display-name></display-name>

	<!-- 加载spring容器 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/classes/spring/applicationContext-*.xml,
		
		classpath:spring/spring-config-shiro.xml
		
		</param-value>
	</context-param> 

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- springmvc前端控制器，RESTful配置 -->
	<servlet>
		<servlet-name>springmvc_rest</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- contextConfigLocation配置springmvc加载的配置文件（配置处理器映射器、适配器等等） 如果不配置contextConfigLocation，默认加载的是/WEB-INF/servlet名称-serlvet.xml（springmvc-servlet.xml） -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>
			classpath:spring/springmvc.xml
			</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>springmvc_rest</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- post乱码过虑器 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- shiro 安全过滤器 -->
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>
		 org.springframework.web.filter.DelegatingFilterProxy
		</filter-class>
		<init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
	</filter>
	<filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>
    <!-- https相关配置 -->
    <!-- 强制SSL配置，即普通的请求也会重定向为SSL请求 -->    
    <!--<security-constraint> 
         <web-resource-collection>  
            <web-resource-name>SSL</web-resource-name>
           <url-pattern>/*</url-pattern>--><!-- hello使用SSL -->  
       <!-- </web-resource-collection> 
         <user-data-constraint> 
             <description>SSL required</description> -->
            <!--CONFIDENTIAL: 要保证服务器和客户端之间传输的数据不能够被修改，且不能被第三方查看到 -->  
            <!-- INTEGRAL: 要保证服务器和client之间传输的数据不能够被修改 -->  
            <!-- NONE: 指示容器必须能够在任一的连接上提供数据。（即用HTTP或HTTPS，由客户端来决定）-->  
              
            <!--<transport-guarantee>CONFIDENTIAL</transport-guarantee>  
         </user-data-constraint> 
     </security-constraint>-->
    

	<!-- xss攻击过滤  过滤 html富文本编辑器内容  拦截 商品，资讯-->
	<filter>
		<filter-name>XssEscape</filter-name>
		<filter-class>
		   com.yundongjia.oa.filter.XssFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>XssEscape</filter-name>
		<url-pattern>/yundongjia/savegoods</url-pattern>
		<url-pattern>/yundongjia/updategoods</url-pattern>
		<url-pattern>/yundongjia/saveinformation</url-pattern>
		<url-pattern>/yundongjia/updateinformation</url-pattern>
		<dispatcher>REQUEST</dispatcher>
	</filter-mapping>
</web-app>
