<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yundongjia.oa.admin.mapper.TAdminAuthRefMapper" >
  <resultMap id="BaseResultMap" type="com.yundongjia.oa.admin.po.TAdminAuthRef" >
    <id column="admin_auth_id" property="adminAuthId" jdbcType="INTEGER" />
    <result column="admin_auth_auth_id" property="adminAuthAuthId" jdbcType="INTEGER" />
    <result column="admin_auth_role_id" property="adminAuthRoleId" jdbcType="INTEGER" />
    <result column="admin_auth_admin_id" property="adminAuthAdminId" jdbcType="INTEGER" />
    <result column="admin_auth_create_date" property="adminAuthCreateDate" jdbcType="TIMESTAMP" />
    <result column="admin_auth_operatorid" property="adminAuthOperatorid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    admin_auth_id, admin_auth_auth_id, admin_auth_role_id, admin_auth_admin_id, admin_auth_create_date, 
    admin_auth_operatorid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yundongjia.oa.admin.po.TAdminAuthRefExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_admin_auth_ref
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_admin_auth_ref
    where admin_auth_id = #{adminAuthId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_admin_auth_ref
    where admin_auth_id = #{adminAuthId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yundongjia.oa.admin.po.TAdminAuthRefExample" >
    delete from t_admin_auth_ref
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yundongjia.oa.admin.po.TAdminAuthRef" >
    insert into t_admin_auth_ref (admin_auth_id, admin_auth_auth_id, admin_auth_role_id, 
      admin_auth_admin_id, admin_auth_create_date, 
      admin_auth_operatorid)
    values (#{adminAuthId,jdbcType=INTEGER}, #{adminAuthAuthId,jdbcType=INTEGER}, #{adminAuthRoleId,jdbcType=INTEGER}, 
      #{adminAuthAdminId,jdbcType=INTEGER}, #{adminAuthCreateDate,jdbcType=TIMESTAMP}, 
      #{adminAuthOperatorid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yundongjia.oa.admin.po.TAdminAuthRef" >
    insert into t_admin_auth_ref
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="adminAuthId != null" >
        admin_auth_id,
      </if>
      <if test="adminAuthAuthId != null" >
        admin_auth_auth_id,
      </if>
      <if test="adminAuthRoleId != null" >
        admin_auth_role_id,
      </if>
      <if test="adminAuthAdminId != null" >
        admin_auth_admin_id,
      </if>
      <if test="adminAuthCreateDate != null" >
        admin_auth_create_date,
      </if>
      <if test="adminAuthOperatorid != null" >
        admin_auth_operatorid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="adminAuthId != null" >
        #{adminAuthId,jdbcType=INTEGER},
      </if>
      <if test="adminAuthAuthId != null" >
        #{adminAuthAuthId,jdbcType=INTEGER},
      </if>
      <if test="adminAuthRoleId != null" >
        #{adminAuthRoleId,jdbcType=INTEGER},
      </if>
      <if test="adminAuthAdminId != null" >
        #{adminAuthAdminId,jdbcType=INTEGER},
      </if>
      <if test="adminAuthCreateDate != null" >
        #{adminAuthCreateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="adminAuthOperatorid != null" >
        #{adminAuthOperatorid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yundongjia.oa.admin.po.TAdminAuthRefExample" resultType="java.lang.Integer" >
    select count(*) from t_admin_auth_ref
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_admin_auth_ref
    <set >
      <if test="record.adminAuthId != null" >
        admin_auth_id = #{record.adminAuthId,jdbcType=INTEGER},
      </if>
      <if test="record.adminAuthAuthId != null" >
        admin_auth_auth_id = #{record.adminAuthAuthId,jdbcType=INTEGER},
      </if>
      <if test="record.adminAuthRoleId != null" >
        admin_auth_role_id = #{record.adminAuthRoleId,jdbcType=INTEGER},
      </if>
      <if test="record.adminAuthAdminId != null" >
        admin_auth_admin_id = #{record.adminAuthAdminId,jdbcType=INTEGER},
      </if>
      <if test="record.adminAuthCreateDate != null" >
        admin_auth_create_date = #{record.adminAuthCreateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.adminAuthOperatorid != null" >
        admin_auth_operatorid = #{record.adminAuthOperatorid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_admin_auth_ref
    set admin_auth_id = #{record.adminAuthId,jdbcType=INTEGER},
      admin_auth_auth_id = #{record.adminAuthAuthId,jdbcType=INTEGER},
      admin_auth_role_id = #{record.adminAuthRoleId,jdbcType=INTEGER},
      admin_auth_admin_id = #{record.adminAuthAdminId,jdbcType=INTEGER},
      admin_auth_create_date = #{record.adminAuthCreateDate,jdbcType=TIMESTAMP},
      admin_auth_operatorid = #{record.adminAuthOperatorid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yundongjia.oa.admin.po.TAdminAuthRef" >
    update t_admin_auth_ref
    <set >
      <if test="adminAuthAuthId != null" >
        admin_auth_auth_id = #{adminAuthAuthId,jdbcType=INTEGER},
      </if>
      <if test="adminAuthRoleId != null" >
        admin_auth_role_id = #{adminAuthRoleId,jdbcType=INTEGER},
      </if>
      <if test="adminAuthAdminId != null" >
        admin_auth_admin_id = #{adminAuthAdminId,jdbcType=INTEGER},
      </if>
      <if test="adminAuthCreateDate != null" >
        admin_auth_create_date = #{adminAuthCreateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="adminAuthOperatorid != null" >
        admin_auth_operatorid = #{adminAuthOperatorid,jdbcType=INTEGER},
      </if>
    </set>
    where admin_auth_id = #{adminAuthId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yundongjia.oa.admin.po.TAdminAuthRef" >
    update t_admin_auth_ref
    set admin_auth_auth_id = #{adminAuthAuthId,jdbcType=INTEGER},
      admin_auth_role_id = #{adminAuthRoleId,jdbcType=INTEGER},
      admin_auth_admin_id = #{adminAuthAdminId,jdbcType=INTEGER},
      admin_auth_create_date = #{adminAuthCreateDate,jdbcType=TIMESTAMP},
      admin_auth_operatorid = #{adminAuthOperatorid,jdbcType=INTEGER}
    where admin_auth_id = #{adminAuthId,jdbcType=INTEGER}
  </update>
  

    <!--以下是手写的-->

    <insert id="insertRoleAuthRefs" parameterType="java.util.List">
        insert into t_admin_auth_ref (admin_auth_auth_id, admin_auth_role_id,
        admin_auth_create_date, admin_auth_operatorid
        )
        values
        <foreach collection="list" item="item" index="index" separator="," >
            (#{item.adminAuthAuthId},#{item.adminAuthRoleId},#{item.adminAuthCreateDate}
            ,#{item.adminAuthOperatorid})
        </foreach>
    </insert>


	<!-- 
	手写  sql
	 -->
	<!-- 根据角色id查询 -->
	<select id="selectAuthByRoleId" parameterType="java.util.Map" resultType="java.util.Map">
	   <if test="param.rId == 0">
	     select 
t_auth.auth_id,
t_auth.auth_name,
t_auth.auth_mark,
t_auth.auth_comm
from t_auth where t_auth.auth_mark like #{param.flag}
order by  t_auth.auth_menu_id desc ,t_auth.auth_ordernum desc
	     
	   </if>
	   <if test="param.rId != 0">
 
 SELECT 
t_auth.auth_id,
t_auth.auth_name,
t_auth.auth_mark,
t_auth.auth_comm
FROM t_auth
INNER JOIN t_admin_auth_ref ref
ON admin_auth_auth_id = auth_id 
 WHERE  ref.admin_auth_role_id = #{param.rId}
order by  t_auth.auth_menu_id desc ,t_auth.auth_ordernum desc
	   </if>
	
	</select>
</mapper>