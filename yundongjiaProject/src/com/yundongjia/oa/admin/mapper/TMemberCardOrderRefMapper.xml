<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yundongjia.oa.admin.mapper.TMemberCardOrderRefMapper" >
  <resultMap id="BaseResultMap" type="com.yundongjia.oa.admin.po.TMemberCardOrderRef" >
    <id column="orderId" property="orderid" jdbcType="INTEGER" />
    <result column="cardTypeId" property="cardtypeid" jdbcType="INTEGER" />
    <result column="memberId" property="memberid" jdbcType="INTEGER" />
    <result column="discount" property="discount" jdbcType="REAL" />
    <result column="totalMoney" property="totalmoney" jdbcType="DOUBLE" />
    <result column="realMoney" property="realmoney" jdbcType="DOUBLE" />
    <result column="cashBack" property="cashback" jdbcType="DOUBLE" />
    <result column="cardOrder" property="cardorder" jdbcType="VARCHAR" />
    <result column="payType" property="paytype" jdbcType="VARCHAR" />
    <result column="validDay" property="validday" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="isDel" property="isdel" jdbcType="INTEGER" />
    <result column="expireDate" property="expiredate" jdbcType="VARCHAR" />
    <result column="createDate" property="createdate" jdbcType="VARCHAR" />
    <result column="enterpriseId" property="enterpriseid" jdbcType="INTEGER" />
    <result column="sportsCount" property="sportscount" jdbcType="INTEGER" />
    <result column="surplusSportsCount" property="surplussportscount" jdbcType="INTEGER" />
    <result column="self" property="self" jdbcType="VARCHAR" />
    <result column="orderNum" property="ordernum" jdbcType="VARCHAR" />
    <result column="source" property="source" jdbcType="VARCHAR" />
    <result column="payStatus" property="paystatus" jdbcType="VARCHAR" />
    <result column="comm" property="comm" jdbcType="VARCHAR" />
    <result column="messageStatus" property="messagestatus" jdbcType="VARCHAR" />
    <result column="mobilePhoneNum" property="mobilephonenum" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    orderId, cardTypeId, memberId, discount, totalMoney, realMoney, cashBack, cardOrder, 
    payType, validDay, status, isDel, expireDate, createDate, enterpriseId, sportsCount, 
    surplusSportsCount, self, orderNum, source, payStatus, comm, messageStatus, mobilePhoneNum
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yundongjia.oa.admin.po.TMemberCardOrderRefExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_member_card_order_ref
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_member_card_order_ref
    where orderId = #{orderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_member_card_order_ref
    where orderId = #{orderid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yundongjia.oa.admin.po.TMemberCardOrderRefExample" >
    delete from t_member_card_order_ref
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yundongjia.oa.admin.po.TMemberCardOrderRef" >
    insert into t_member_card_order_ref (orderId, cardTypeId, memberId, 
      discount, totalMoney, realMoney, 
      cashBack, cardOrder, payType, 
      validDay, status, isDel, 
      expireDate, createDate, enterpriseId, 
      sportsCount, surplusSportsCount, self, 
      orderNum, source, payStatus, 
      comm, messageStatus, mobilePhoneNum
      )
    values (#{orderid,jdbcType=INTEGER}, #{cardtypeid,jdbcType=INTEGER}, #{memberid,jdbcType=INTEGER}, 
      #{discount,jdbcType=REAL}, #{totalmoney,jdbcType=DOUBLE}, #{realmoney,jdbcType=DOUBLE}, 
      #{cashback,jdbcType=DOUBLE}, #{cardorder,jdbcType=VARCHAR}, #{paytype,jdbcType=VARCHAR}, 
      #{validday,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{isdel,jdbcType=INTEGER}, 
      #{expiredate,jdbcType=VARCHAR}, #{createdate,jdbcType=VARCHAR}, #{enterpriseid,jdbcType=INTEGER}, 
      #{sportscount,jdbcType=INTEGER}, #{surplussportscount,jdbcType=INTEGER}, #{self,jdbcType=VARCHAR}, 
      #{ordernum,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, #{paystatus,jdbcType=VARCHAR}, 
      #{comm,jdbcType=VARCHAR}, #{messagestatus,jdbcType=VARCHAR}, #{mobilephonenum,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yundongjia.oa.admin.po.TMemberCardOrderRef" keyProperty="orderid" useGeneratedKeys="true">
    insert into t_member_card_order_ref
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="cardtypeid != null" >
        cardTypeId,
      </if>
      <if test="memberid != null" >
        memberId,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="totalmoney != null" >
        totalMoney,
      </if>
      <if test="realmoney != null" >
        realMoney,
      </if>
      <if test="cashback != null" >
        cashBack,
      </if>
      <if test="cardorder != null" >
        cardOrder,
      </if>
      <if test="paytype != null" >
        payType,
      </if>
      <if test="validday != null" >
        validDay,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="isdel != null" >
        isDel,
      </if>
      <if test="expiredate != null" >
        expireDate,
      </if>
      <if test="createdate != null" >
        createDate,
      </if>
      <if test="enterpriseid != null" >
        enterpriseId,
      </if>
      <if test="sportscount != null" >
        sportsCount,
      </if>
      <if test="surplussportscount != null" >
        surplusSportsCount,
      </if>
      <if test="self != null" >
        self,
      </if>
      <if test="ordernum != null" >
        orderNum,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="paystatus != null" >
        payStatus,
      </if>
      <if test="comm != null" >
        comm,
      </if>
      <if test="messagestatus != null" >
        messageStatus,
      </if>
      <if test="mobilephonenum != null" >
        mobilePhoneNum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="cardtypeid != null" >
        #{cardtypeid,jdbcType=INTEGER},
      </if>
      <if test="memberid != null" >
        #{memberid,jdbcType=INTEGER},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=REAL},
      </if>
      <if test="totalmoney != null" >
        #{totalmoney,jdbcType=DOUBLE},
      </if>
      <if test="realmoney != null" >
        #{realmoney,jdbcType=DOUBLE},
      </if>
      <if test="cashback != null" >
        #{cashback,jdbcType=DOUBLE},
      </if>
      <if test="cardorder != null" >
        #{cardorder,jdbcType=VARCHAR},
      </if>
      <if test="paytype != null" >
        #{paytype,jdbcType=VARCHAR},
      </if>
      <if test="validday != null" >
        #{validday,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="isdel != null" >
        #{isdel,jdbcType=INTEGER},
      </if>
      <if test="expiredate != null" >
        #{expiredate,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseid != null" >
        #{enterpriseid,jdbcType=INTEGER},
      </if>
      <if test="sportscount != null" >
        #{sportscount,jdbcType=INTEGER},
      </if>
      <if test="surplussportscount != null" >
        #{surplussportscount,jdbcType=INTEGER},
      </if>
      <if test="self != null" >
        #{self,jdbcType=VARCHAR},
      </if>
      <if test="ordernum != null" >
        #{ordernum,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="paystatus != null" >
        #{paystatus,jdbcType=VARCHAR},
      </if>
      <if test="comm != null" >
        #{comm,jdbcType=VARCHAR},
      </if>
      <if test="messagestatus != null" >
        #{messagestatus,jdbcType=VARCHAR},
      </if>
      <if test="mobilephonenum != null" >
        #{mobilephonenum,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yundongjia.oa.admin.po.TMemberCardOrderRefExample" resultType="java.lang.Integer" >
    select count(*) from t_member_card_order_ref
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_member_card_order_ref
    <set >
      <if test="record.orderid != null" >
        orderId = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.cardtypeid != null" >
        cardTypeId = #{record.cardtypeid,jdbcType=INTEGER},
      </if>
      <if test="record.memberid != null" >
        memberId = #{record.memberid,jdbcType=INTEGER},
      </if>
      <if test="record.discount != null" >
        discount = #{record.discount,jdbcType=REAL},
      </if>
      <if test="record.totalmoney != null" >
        totalMoney = #{record.totalmoney,jdbcType=DOUBLE},
      </if>
      <if test="record.realmoney != null" >
        realMoney = #{record.realmoney,jdbcType=DOUBLE},
      </if>
      <if test="record.cashback != null" >
        cashBack = #{record.cashback,jdbcType=DOUBLE},
      </if>
      <if test="record.cardorder != null" >
        cardOrder = #{record.cardorder,jdbcType=VARCHAR},
      </if>
      <if test="record.paytype != null" >
        payType = #{record.paytype,jdbcType=VARCHAR},
      </if>
      <if test="record.validday != null" >
        validDay = #{record.validday,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.isdel != null" >
        isDel = #{record.isdel,jdbcType=INTEGER},
      </if>
      <if test="record.expiredate != null" >
        expireDate = #{record.expiredate,jdbcType=VARCHAR},
      </if>
      <if test="record.createdate != null" >
        createDate = #{record.createdate,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseid != null" >
        enterpriseId = #{record.enterpriseid,jdbcType=INTEGER},
      </if>
      <if test="record.sportscount != null" >
        sportsCount = #{record.sportscount,jdbcType=INTEGER},
      </if>
      <if test="record.surplussportscount != null" >
        surplusSportsCount = #{record.surplussportscount,jdbcType=INTEGER},
      </if>
      <if test="record.self != null" >
        self = #{record.self,jdbcType=VARCHAR},
      </if>
      <if test="record.ordernum != null" >
        orderNum = #{record.ordernum,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null" >
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.paystatus != null" >
        payStatus = #{record.paystatus,jdbcType=VARCHAR},
      </if>
      <if test="record.comm != null" >
        comm = #{record.comm,jdbcType=VARCHAR},
      </if>
      <if test="record.messagestatus != null" >
        messageStatus = #{record.messagestatus,jdbcType=VARCHAR},
      </if>
      <if test="record.mobilephonenum != null" >
        mobilePhoneNum = #{record.mobilephonenum,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_member_card_order_ref
    set orderId = #{record.orderid,jdbcType=INTEGER},
      cardTypeId = #{record.cardtypeid,jdbcType=INTEGER},
      memberId = #{record.memberid,jdbcType=INTEGER},
      discount = #{record.discount,jdbcType=REAL},
      totalMoney = #{record.totalmoney,jdbcType=DOUBLE},
      realMoney = #{record.realmoney,jdbcType=DOUBLE},
      cashBack = #{record.cashback,jdbcType=DOUBLE},
      cardOrder = #{record.cardorder,jdbcType=VARCHAR},
      payType = #{record.paytype,jdbcType=VARCHAR},
      validDay = #{record.validday,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      isDel = #{record.isdel,jdbcType=INTEGER},
      expireDate = #{record.expiredate,jdbcType=VARCHAR},
      createDate = #{record.createdate,jdbcType=VARCHAR},
      enterpriseId = #{record.enterpriseid,jdbcType=INTEGER},
      sportsCount = #{record.sportscount,jdbcType=INTEGER},
      surplusSportsCount = #{record.surplussportscount,jdbcType=INTEGER},
      self = #{record.self,jdbcType=VARCHAR},
      orderNum = #{record.ordernum,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=VARCHAR},
      payStatus = #{record.paystatus,jdbcType=VARCHAR},
      comm = #{record.comm,jdbcType=VARCHAR},
      messageStatus = #{record.messagestatus,jdbcType=VARCHAR},
      mobilePhoneNum = #{record.mobilephonenum,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yundongjia.oa.admin.po.TMemberCardOrderRef" >
    update t_member_card_order_ref
    <set >
      <if test="cardtypeid != null" >
        cardTypeId = #{cardtypeid,jdbcType=INTEGER},
      </if>
      <if test="memberid != null" >
        memberId = #{memberid,jdbcType=INTEGER},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=REAL},
      </if>
      <if test="totalmoney != null" >
        totalMoney = #{totalmoney,jdbcType=DOUBLE},
      </if>
      <if test="realmoney != null" >
        realMoney = #{realmoney,jdbcType=DOUBLE},
      </if>
      <if test="cashback != null" >
        cashBack = #{cashback,jdbcType=DOUBLE},
      </if>
      <if test="cardorder != null" >
        cardOrder = #{cardorder,jdbcType=VARCHAR},
      </if>
      <if test="paytype != null" >
        payType = #{paytype,jdbcType=VARCHAR},
      </if>
      <if test="validday != null" >
        validDay = #{validday,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="isdel != null" >
        isDel = #{isdel,jdbcType=INTEGER},
      </if>
      <if test="expiredate != null" >
        expireDate = #{expiredate,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createDate = #{createdate,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseid != null" >
        enterpriseId = #{enterpriseid,jdbcType=INTEGER},
      </if>
      <if test="sportscount != null" >
        sportsCount = #{sportscount,jdbcType=INTEGER},
      </if>
      <if test="surplussportscount != null" >
        surplusSportsCount = #{surplussportscount,jdbcType=INTEGER},
      </if>
      <if test="self != null" >
        self = #{self,jdbcType=VARCHAR},
      </if>
      <if test="ordernum != null" >
        orderNum = #{ordernum,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="paystatus != null" >
        payStatus = #{paystatus,jdbcType=VARCHAR},
      </if>
      <if test="comm != null" >
        comm = #{comm,jdbcType=VARCHAR},
      </if>
      <if test="messagestatus != null" >
        messageStatus = #{messagestatus,jdbcType=VARCHAR},
      </if>
      <if test="mobilephonenum != null" >
        mobilePhoneNum = #{mobilephonenum,jdbcType=VARCHAR},
      </if>
    </set>
    where orderId = #{orderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yundongjia.oa.admin.po.TMemberCardOrderRef" >
    update t_member_card_order_ref
    set cardTypeId = #{cardtypeid,jdbcType=INTEGER},
      memberId = #{memberid,jdbcType=INTEGER},
      discount = #{discount,jdbcType=REAL},
      totalMoney = #{totalmoney,jdbcType=DOUBLE},
      realMoney = #{realmoney,jdbcType=DOUBLE},
      cashBack = #{cashback,jdbcType=DOUBLE},
      cardOrder = #{cardorder,jdbcType=VARCHAR},
      payType = #{paytype,jdbcType=VARCHAR},
      validDay = #{validday,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      isDel = #{isdel,jdbcType=INTEGER},
      expireDate = #{expiredate,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=VARCHAR},
      enterpriseId = #{enterpriseid,jdbcType=INTEGER},
      sportsCount = #{sportscount,jdbcType=INTEGER},
      surplusSportsCount = #{surplussportscount,jdbcType=INTEGER},
      self = #{self,jdbcType=VARCHAR},
      orderNum = #{ordernum,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      payStatus = #{paystatus,jdbcType=VARCHAR},
      comm = #{comm,jdbcType=VARCHAR},
      messageStatus = #{messagestatus,jdbcType=VARCHAR},
      mobilePhoneNum = #{mobilephonenum,jdbcType=VARCHAR}
    where orderId = #{orderid,jdbcType=INTEGER}
  </update>
  <!--  手写SQL -->
  <!-- 根据卡类型ID查询下属单卡 -->
  <select id="findListByCardTypeId" parameterType="java.util.Map" 

resultType="java.util.Map">
  	select tm.*,tc.cardTypeName,te.enterpriseName,te.enterprise_id from 

t_member_card_order_ref tm join t_card_type tc join t_enterprise te
		on tm.cardTypeId = tc.cardId 
		 and te.enterprise_id = tm.enterpriseId
		 and tm.isDel = 0
		 <if test="cardid != null" >
		 	and tm.cardTypeId = #{cardid}
		 </if>
		 <if test="info != null" >
		 	and te.enterpriseName like #{info}
	     </if>
	     <if test="cid != null" >
	     	and tm.orderId = #{cid}
	     </if>	
	     order by tm.orderId desc
  </select>
  
  <!-- 根据id查询 -->
  <select id="getCardOrderById" parameterType="java.lang.Integer"
	resultType="java.util.Map">
	select * from t_member_card_order_ref
	inner join t_card_type
	on t_member_card_order_ref.cardTypeId = t_card_type.cardId
	where t_member_card_order_ref.orderId = #{cardId}
	
	order by t_member_card_order_ref.createDate desc

</select>
  
  <!-- hj   求运动次数-->
  <select id="getCardOrderStatisByEnterpriseId" parameterType="java.lang.Integer" 

resultType="java.util.Map">
  	
  select 
sum(sportsCount) as 'moveSum', ##总运动数
sum(surplusSportsCount) as 'remaCount', ##剩余运动数
sum(sportsCount) - sum(surplusSportsCount) as 'moveCount' ##已经运动次数
from t_member_card_order_ref
where status = 0 and isDel = 0 and
 enterpriseId = #{enterId} and date_format(expireDate,'%Y-%m-%d %H:%i:%S') >= now()
 having remaCount > 0
  </select>
  
  <!-- 根据卡类型ID查询下属单卡 个人卡 -->
  <select id="findListSelfByCardTypeId" parameterType="java.util.Map" 

resultType="java.util.Map">
  	select tm.*,tc.cardTypeName,tu.mobilePhoneNo backuserMobliePhone from 

t_member_card_order_ref tm join t_card_type tc join t_user tu join t_member tr
		on tm.cardTypeId = tc.cardId
		 and tu.userId = tr.userId
		 and tr.memberId = tm.memberId
		 and tm.isDel = 0
		 <if test="cardid != null" >
		 	and tm.cardTypeId = #{cardid}
		 </if>
		 <if test="info != null" >
		 	and tu.mobilePhoneNo like #{info}
	     </if>
	     <if test="cid != null" >
	     	and tm.orderId = #{cid}
	     </if>	
	     <if test="userId != null" >
	     	and tu.userId = #{userId}
	     </if>	
	     order by tm.orderId desc
  </select>
  
  <!-- enterId:根据企业查询卡 -->
  <select id="getCardOrderByEnterId" parameterType="java.lang.Integer" 

resultType="java.util.Map">
  	select
	t_member_card_order_ref.*,
	t_card_type.cardTypeName
	from t_member_card_order_ref
	inner join t_card_type
	on t_member_card_order_ref.cardTypeId = t_card_type.cardId
	where t_member_card_order_ref.enterpriseId = #{enterId}
	
	order by t_member_card_order_ref.createDate desc
  </select>
  
   <select id="selectmembercardInfocardType" parameterType="java.util.Map" 

resultType="java.util.Map">
  	SELECT a.*,b.*
	FROM t_member_card_order_ref a
	LEFT JOIN t_card_type b ON a.cardTypeId = b.cardId
	WHERE a.memberId = #{memberId} and a.status = #{status} and a.payStatus='2'
  </select>

  
  
  <!-- hj 全查或条件查询个人卡订单 -->
  <select id="findMemberCardOrderList" parameterType="com.yundongjia.oa.admin.vo.OrderSearchVo" resultType="java.util.Map">
      select * from t_member_card_order_ref 
      
      <if test="orderMenuType == 1">
left join t_order_discount
on t_order_discount.orderId = t_member_card_order_ref.orderId
</if>
where t_member_card_order_ref.memberId > 0 and t_member_card_order_ref.isDel = 0 and t_member_card_order_ref.`status` = 0
<if test="sourceContext !=null and sourceContext != ''">
	and comm like  CONCAT('%', #{sourceContext}, '%')
</if>
<if test="orderStatus != null and orderStatus != -1">
    and payStatus = #{orderStatus}
</if>
<if test="orderMenuType != 1">
   <if test="startTime != null and startTime !='' and endTime !=null and endTime !='' ">
    and createDate between #{startTime} and #{endTime}
   </if>
</if>
<if test="mobilePhoneNum !=null and mobilePhoneNum !='' ">
    and mobilePhoneNum like  CONCAT('%',#{mobilePhoneNum},'%') 
</if>
<if test="memberId !=null and memberId !='' ">
    and memberId = #{memberId} 
</if>
<if test="orderMenuType == 1">
  and t_order_discount.status = 5
  and (payStatus = 3 or payStatus = 4)
  <if test="startTime != null and startTime !='' and endTime !=null and endTime !='' ">
    and retreatDate between #{startTime} and #{endTime}
  </if>
</if>

      
order by t_member_card_order_ref.createDate desc
      
      
  </select>

</mapper>