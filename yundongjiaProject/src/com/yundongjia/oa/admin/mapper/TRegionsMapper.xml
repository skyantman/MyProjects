<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yundongjia.oa.admin.mapper.TRegionsMapper" >
  <resultMap id="BaseResultMap" type="com.yundongjia.oa.admin.po.TRegions" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="p_code" property="pCode" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="isShow" property="isshow" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, code, name, p_code, level, isShow
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yundongjia.oa.admin.po.TRegionsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_regions
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_regions
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_regions
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yundongjia.oa.admin.po.TRegionsExample" >
    delete from t_regions
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yundongjia.oa.admin.po.TRegions" >
    insert into t_regions (id, code, name, 
      p_code, level, isShow
      )
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{pCode,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{isshow,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yundongjia.oa.admin.po.TRegions" >
    insert into t_regions
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="pCode != null" >
        p_code,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="isshow != null" >
        isShow,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pCode != null" >
        #{pCode,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="isshow != null" >
        #{isshow,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yundongjia.oa.admin.po.TRegionsExample" resultType="java.lang.Integer" >
    select count(*) from t_regions
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_regions
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.pCode != null" >
        p_code = #{record.pCode,jdbcType=INTEGER},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.isshow != null" >
        isShow = #{record.isshow,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_regions
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      p_code = #{record.pCode,jdbcType=INTEGER},
      level = #{record.level,jdbcType=INTEGER},
      isShow = #{record.isshow,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yundongjia.oa.admin.po.TRegions" >
    update t_regions
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pCode != null" >
        p_code = #{pCode,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="isshow != null" >
        isShow = #{isshow,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yundongjia.oa.admin.po.TRegions" >
    update t_regions
    set code = #{code,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      p_code = #{pCode,jdbcType=INTEGER},
      level = #{level,jdbcType=INTEGER},
      isShow = #{isshow,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 获取省 -->
  <select id="geTRegionsByProvince" resultMap="BaseResultMap">
    select * from t_regions where t_regions.isShow = 1 and t_regions.`level` = 0 order by t_regions.code
  </select>
  <!-- 根据省code获取市 -->
  <select id="getCityByProvince" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  select * from t_regions where t_regions.p_code = #{proCode} and t_regions.`level` = 1 and t_regions.isShow = 1
  order by t_regions.code
  </select>
  <!-- 根据市获取区 -->
  <select id="getAreaByCity" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select * from t_regions where t_regions.p_code = #{cityCode} and t_regions.`level` = 3  and t_regions.isShow = 1
	order by t_regions.code
  </select>
  
  <!-- 逆向，从小单位获取大单位 -->
  <!--  -->
  <select id="getAreaByArea" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	 select * from t_regions where  t_regions.isShow = 1 and t_regions.`level` = 3  and t_regions.code = #{regionsId}
  </select>
  <!-- 根据区code 获取市 -->
  <select id="getCityByArea" resultMap="BaseResultMap" parameterType="java.lang.Integer">
   select * from t_regions where  t_regions.isShow = 1 and t_regions.`level` = 1  and t_regions.code = #{areaCode}
  </select>
  
  <!-- 根据市查询省 -->
  <select id="getProvinceByCity" resultMap="BaseResultMap" parameterType="java.lang.Integer">
     select * from t_regions where t_regions.isShow = 1 and t_regions.`level` = 0  and t_regions.code = #{cityCode}
  </select>
  
  <!-- 根据城市查询所有的区 -->
  <select id="getAreaCodeByCityCode" parameterType="java.lang.String" resultType="java.lang.Integer">
  	select code from t_regions where substring(code,1,3) = substring(#{cityCode},1,3) and level = 3
  </select>
  <!--hj 根据城市CODE查询所有的区  -->
  <select id="findStudioNearbyData" parameterType="java.lang.String" resultType="java.util.Map">
   select t_regions.code,t_regions.name from t_regions where substring(code,1,3) = substring(#{cityCode},1,3) and level = 3
  </select>
  <!--  模糊查询城市名称   默认在规定城市中搜索-->
  <select id="findCityByCityName" parameterType="java.lang.String" resultType="java.util.Map">
  select code,name from t_regions where t_regions.name like CONCAT('%',#{cityName},'%') and t_regions.`level` = 0
  and code in (110000,310000,440000,330000,370000)
  </select>
  
</mapper>