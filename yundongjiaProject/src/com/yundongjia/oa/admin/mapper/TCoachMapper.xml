<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yundongjia.oa.admin.mapper.TCoachMapper" >
  <resultMap id="BaseResultMap" type="com.yundongjia.oa.admin.po.TCoach" >
    <id column="coachId" property="coachid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="regionsId" property="regionsid" jdbcType="INTEGER" />
    <result column="weight" property="weight" jdbcType="DOUBLE" />
    <result column="height" property="height" jdbcType="DOUBLE" />
    <result column="coursePrice" property="courseprice" jdbcType="DOUBLE" />
    <result column="singlePrice" property="singleprice" jdbcType="DOUBLE" />
    <result column="nickName" property="nickname" jdbcType="VARCHAR" />
    <result column="isChecked" property="ischecked" jdbcType="VARCHAR" />
    <result column="workAge" property="workage" jdbcType="VARCHAR" />
    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
    <result column="imgpath" property="imgpath" jdbcType="VARCHAR" />
    <result column="imgStat" property="imgstat" jdbcType="INTEGER" />
    <result column="autograph" property="autograph" jdbcType="VARCHAR" />
    <result column="keywords" property="keywords" jdbcType="VARCHAR" />
    <result column="cancleLimit" property="canclelimit" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    coachId, userId, gender, regionsId, weight, height, coursePrice, singlePrice, nickName, 
    isChecked, workAge, introduce, imgpath, imgStat, autograph, keywords, cancleLimit, 
    status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yundongjia.oa.admin.po.TCoachExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_coach
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_coach
    where coachId = #{coachid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_coach
    where coachId = #{coachid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yundongjia.oa.admin.po.TCoachExample" >
    delete from t_coach
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yundongjia.oa.admin.po.TCoach" >
    <selectKey resultType="java.lang.Integer" keyProperty="coachid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_coach (userId, gender, regionsId, 
      weight, height, coursePrice, 
      singlePrice, nickName, isChecked, 
      workAge, introduce, imgpath, 
      imgStat, autograph, keywords, 
      cancleLimit, status)
    values (#{userid,jdbcType=INTEGER}, #{gender,jdbcType=VARCHAR}, #{regionsid,jdbcType=INTEGER}, 
      #{weight,jdbcType=DOUBLE}, #{height,jdbcType=DOUBLE}, #{courseprice,jdbcType=DOUBLE}, 
      #{singleprice,jdbcType=DOUBLE}, #{nickname,jdbcType=VARCHAR}, #{ischecked,jdbcType=VARCHAR}, 
      #{workage,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, #{imgpath,jdbcType=VARCHAR}, 
      #{imgstat,jdbcType=INTEGER}, #{autograph,jdbcType=VARCHAR}, #{keywords,jdbcType=VARCHAR}, 
      #{canclelimit,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yundongjia.oa.admin.po.TCoach" >
    <selectKey resultType="java.lang.Integer" keyProperty="coachid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_coach
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="regionsid != null" >
        regionsId,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="height != null" >
        height,
      </if>
      <if test="courseprice != null" >
        coursePrice,
      </if>
      <if test="singleprice != null" >
        singlePrice,
      </if>
      <if test="nickname != null" >
        nickName,
      </if>
      <if test="ischecked != null" >
        isChecked,
      </if>
      <if test="workage != null" >
        workAge,
      </if>
      <if test="introduce != null" >
        introduce,
      </if>
      <if test="imgpath != null" >
        imgpath,
      </if>
      <if test="imgstat != null" >
        imgStat,
      </if>
      <if test="autograph != null" >
        autograph,
      </if>
      <if test="keywords != null" >
        keywords,
      </if>
      <if test="canclelimit != null" >
        cancleLimit,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="regionsid != null" >
        #{regionsid,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=DOUBLE},
      </if>
      <if test="height != null" >
        #{height,jdbcType=DOUBLE},
      </if>
      <if test="courseprice != null" >
        #{courseprice,jdbcType=DOUBLE},
      </if>
      <if test="singleprice != null" >
        #{singleprice,jdbcType=DOUBLE},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="ischecked != null" >
        #{ischecked,jdbcType=VARCHAR},
      </if>
      <if test="workage != null" >
        #{workage,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="imgpath != null" >
        #{imgpath,jdbcType=VARCHAR},
      </if>
      <if test="imgstat != null" >
        #{imgstat,jdbcType=INTEGER},
      </if>
      <if test="autograph != null" >
        #{autograph,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null" >
        #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="canclelimit != null" >
        #{canclelimit,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yundongjia.oa.admin.po.TCoachExample" resultType="java.lang.Integer" >
    select count(*) from t_coach
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_coach
    <set >
      <if test="record.coachid != null" >
        coachId = #{record.coachid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.regionsid != null" >
        regionsId = #{record.regionsid,jdbcType=INTEGER},
      </if>
      <if test="record.weight != null" >
        weight = #{record.weight,jdbcType=DOUBLE},
      </if>
      <if test="record.height != null" >
        height = #{record.height,jdbcType=DOUBLE},
      </if>
      <if test="record.courseprice != null" >
        coursePrice = #{record.courseprice,jdbcType=DOUBLE},
      </if>
      <if test="record.singleprice != null" >
        singlePrice = #{record.singleprice,jdbcType=DOUBLE},
      </if>
      <if test="record.nickname != null" >
        nickName = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.ischecked != null" >
        isChecked = #{record.ischecked,jdbcType=VARCHAR},
      </if>
      <if test="record.workage != null" >
        workAge = #{record.workage,jdbcType=VARCHAR},
      </if>
      <if test="record.introduce != null" >
        introduce = #{record.introduce,jdbcType=VARCHAR},
      </if>
      <if test="record.imgpath != null" >
        imgpath = #{record.imgpath,jdbcType=VARCHAR},
      </if>
      <if test="record.imgstat != null" >
        imgStat = #{record.imgstat,jdbcType=INTEGER},
      </if>
      <if test="record.autograph != null" >
        autograph = #{record.autograph,jdbcType=VARCHAR},
      </if>
      <if test="record.keywords != null" >
        keywords = #{record.keywords,jdbcType=VARCHAR},
      </if>
      <if test="record.canclelimit != null" >
        cancleLimit = #{record.canclelimit,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_coach
    set coachId = #{record.coachid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      gender = #{record.gender,jdbcType=VARCHAR},
      regionsId = #{record.regionsid,jdbcType=INTEGER},
      weight = #{record.weight,jdbcType=DOUBLE},
      height = #{record.height,jdbcType=DOUBLE},
      coursePrice = #{record.courseprice,jdbcType=DOUBLE},
      singlePrice = #{record.singleprice,jdbcType=DOUBLE},
      nickName = #{record.nickname,jdbcType=VARCHAR},
      isChecked = #{record.ischecked,jdbcType=VARCHAR},
      workAge = #{record.workage,jdbcType=VARCHAR},
      introduce = #{record.introduce,jdbcType=VARCHAR},
      imgpath = #{record.imgpath,jdbcType=VARCHAR},
      imgStat = #{record.imgstat,jdbcType=INTEGER},
      autograph = #{record.autograph,jdbcType=VARCHAR},
      keywords = #{record.keywords,jdbcType=VARCHAR},
      cancleLimit = #{record.canclelimit,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yundongjia.oa.admin.po.TCoach" >
    update t_coach
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="regionsid != null" >
        regionsId = #{regionsid,jdbcType=INTEGER},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=DOUBLE},
      </if>
      <if test="height != null" >
        height = #{height,jdbcType=DOUBLE},
      </if>
      <if test="courseprice != null" >
        coursePrice = #{courseprice,jdbcType=DOUBLE},
      </if>
      <if test="singleprice != null" >
        singlePrice = #{singleprice,jdbcType=DOUBLE},
      </if>
      <if test="nickname != null" >
        nickName = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="ischecked != null" >
        isChecked = #{ischecked,jdbcType=VARCHAR},
      </if>
      <if test="workage != null" >
        workAge = #{workage,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="imgpath != null" >
        imgpath = #{imgpath,jdbcType=VARCHAR},
      </if>
      <if test="imgstat != null" >
        imgStat = #{imgstat,jdbcType=INTEGER},
      </if>
      <if test="autograph != null" >
        autograph = #{autograph,jdbcType=VARCHAR},
      </if>
      <if test="keywords != null" >
        keywords = #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="canclelimit != null" >
        cancleLimit = #{canclelimit,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where coachId = #{coachid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yundongjia.oa.admin.po.TCoach" >
    update t_coach
    set userId = #{userid,jdbcType=INTEGER},
      gender = #{gender,jdbcType=VARCHAR},
      regionsId = #{regionsid,jdbcType=INTEGER},
      weight = #{weight,jdbcType=DOUBLE},
      height = #{height,jdbcType=DOUBLE},
      coursePrice = #{courseprice,jdbcType=DOUBLE},
      singlePrice = #{singleprice,jdbcType=DOUBLE},
      nickName = #{nickname,jdbcType=VARCHAR},
      isChecked = #{ischecked,jdbcType=VARCHAR},
      workAge = #{workage,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      imgpath = #{imgpath,jdbcType=VARCHAR},
      imgStat = #{imgstat,jdbcType=INTEGER},
      autograph = #{autograph,jdbcType=VARCHAR},
      keywords = #{keywords,jdbcType=VARCHAR},
      cancleLimit = #{canclelimit,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where coachId = #{coachid,jdbcType=INTEGER}
  </update>
  
  <!-- 手写sql -->
  <!--hj  全查或条件查询   -->
  <select id="findCoachListLMap" parameterType="java.util.Map" resultType="java.util.Map">
       select t_coach.*,t_skill.skillId,t_skill.skillName from t_coach
left join t_coach_skill_ref


on t_coach_skill_ref.coachId = t_coach.coachId
left join t_skill
on t_coach_skill_ref.skillId = t_skill.skillId

where 1=1



      <if test="param.flag == 1 and param.skills !=null and param.skills.length > 0">
       and t_skill.skillId in
		 <foreach collection="param.skills" item="tag" index="i"  open="("  separator="," close=")">
		 	#{tag}  
		 </foreach>
      </if>
       
    
      <if test="param.nickname !=null and param.nickname !=''">
        and t_coach.nickName like #{param.nickname}
      </if>
      <if test="param.regionsid != -1">
        and t_coach.regionsId = #{param.regionsid}
      </if>
      <if test="param.status != -1">
        and t_coach.`status` = #{param.status}
      </if>
      
     
       
      
    group by t_coach.coachId
	order by t_coach.coachId desc
      
      
      
  
  </select>
  <!-- hj 根据ID查询 -->
  <select id="getCoachById" parameterType="java.lang.Integer" resultType="java.util.Map">
      select * from t_coach left join t_coach_user on t_coach.coachId = t_coach_user.userId 
      
      where t_coach.coachId = #{coachId}
  
  </select>
  
  <!-- hj 根据状态统计 -->
  <select id="selectStatisByCoach" parameterType="java.lang.Integer" resultType="java.lang.Integer">
   select count(1) from t_coach where t_coach.`status` = #{status}
  </select>
  
  
  <!-- APP  -->
  <!-- hj 教练列表 -->
  <select id="findAppCoachList" resultType="java.util.Map" parameterType="java.util.Map">
  select
t_coach.coachId,
t_coach.nickName,
workAge,
t_studio.studioName,
coursePrice,
t_studio.lng,
t_studio.lat,
t_coach.imgpath,
keywords,
t_coach.regionsId
from t_coach
inner join t_coach_studio_ref
inner join t_studio
on t_coach_studio_ref.coachId = t_coach.coachId
and t_coach_studio_ref.studioId = t_studio.studioId
and t_coach.status = 0

<if test="param.searchName !=null and param.searchName !='' ">
and t_coach.nickName like #{param.searchName}
</if>

<if test="param.areas != null">
and t_coach.regionsId in
  <foreach collection="param.areas" item="area" open="(" separator="," close=")" index="index">
  #{area}
  </foreach>
</if>


order by t_coach.coachId desc

    <!--  select
t_coach.coachId,
t_coach.nickName,
workAge,
t_studio.studioName,
coursePrice,
t_studio.lng,
t_studio.lat,
t_attach.path,
keywords
from t_coach
inner join t_coach_studio_ref
inner join t_studio
inner join t_attach
on t_coach_studio_ref.coachId = t_coach.coachId
and t_coach_studio_ref.studioId = t_studio.studioId
and t_attach.proId = t_coach.coachId 
and t_coach.status = 0
and t_attach.imgOrderNum = 0 
and t_attach.attachType = 3 -->
  </select>
  
  <!--hj  APP 根据教练ID查询 -->
  <select id="selectAppCoachById" parameterType="java.lang.Integer" resultType="java.util.Map">
    select
t_coach.coachId,
t_coach.nickName,
t_studio.studioName,
coursePrice,
t_coach.imgpath,
studioAddr,
workAge,
introduce,
keywords,
t_studio.lng,
t_studio.lat
from t_coach
inner join t_coach_studio_ref
inner join t_studio
on t_coach_studio_ref.coachId = t_coach.coachId
and t_coach_studio_ref.studioId = t_studio.studioId
    where t_coach.coachId = #{coachId}
  </select>
  

  
  
</mapper>