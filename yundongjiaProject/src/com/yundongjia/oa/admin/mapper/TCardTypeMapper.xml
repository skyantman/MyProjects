<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yundongjia.oa.admin.mapper.TCardTypeMapper" >
  <resultMap id="BaseResultMap" type="com.yundongjia.oa.admin.po.TCardType" >
    <id column="cardId" property="cardid" jdbcType="INTEGER" />
    <result column="createDate" property="createdate" jdbcType="VARCHAR" />
    <result column="validDate" property="validdate" jdbcType="INTEGER" />
    <result column="cardType" property="cardtype" jdbcType="VARCHAR" />
    <result column="sportsCount" property="sportscount" jdbcType="INTEGER" />
    <result column="cardTypeName" property="cardtypename" jdbcType="VARCHAR" />
    <result column="cardDiscount" property="carddiscount" jdbcType="REAL" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    <result column="surplusStock" property="surplusstock" jdbcType="INTEGER" />
    <result column="isCashBack" property="iscashback" jdbcType="INTEGER" />
    <result column="backMoney" property="backmoney" jdbcType="DOUBLE" />
    <result column="amount" property="amount" jdbcType="VARCHAR" />
    <result column="isdel" property="isdel" jdbcType="VARCHAR" />
    <result column="isstop" property="isstop" jdbcType="VARCHAR" />
    <result column="regionsId" property="regionsid" jdbcType="VARCHAR" />
    <result column="opeartionAdminId" property="opeartionadminid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    cardId, createDate, validDate, cardType, sportsCount, cardTypeName, cardDiscount, 
    stock, surplusStock, isCashBack, backMoney, amount, isdel, isstop, regionsId, opeartionAdminId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yundongjia.oa.admin.po.TCardTypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_card_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_card_type
    where cardId = #{cardid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_card_type
    where cardId = #{cardid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yundongjia.oa.admin.po.TCardTypeExample" >
    delete from t_card_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yundongjia.oa.admin.po.TCardType" >
    insert into t_card_type (cardId, createDate, validDate, 
      cardType, sportsCount, cardTypeName, 
      cardDiscount, stock, surplusStock, 
      isCashBack, backMoney, amount, 
      isdel, isstop, regionsId, 
      opeartionAdminId)
    values (#{cardid,jdbcType=INTEGER}, #{createdate,jdbcType=VARCHAR}, #{validdate,jdbcType=INTEGER}, 
      #{cardtype,jdbcType=VARCHAR}, #{sportscount,jdbcType=INTEGER}, #{cardtypename,jdbcType=VARCHAR}, 
      #{carddiscount,jdbcType=REAL}, #{stock,jdbcType=INTEGER}, #{surplusstock,jdbcType=INTEGER}, 
      #{iscashback,jdbcType=INTEGER}, #{backmoney,jdbcType=DOUBLE}, #{amount,jdbcType=VARCHAR}, 
      #{isdel,jdbcType=VARCHAR}, #{isstop,jdbcType=VARCHAR}, #{regionsid,jdbcType=VARCHAR}, 
      #{opeartionadminid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yundongjia.oa.admin.po.TCardType" keyProperty="cardid" useGeneratedKeys="true">
    insert into t_card_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cardid != null" >
        cardId,
      </if>
      <if test="createdate != null" >
        createDate,
      </if>
      <if test="validdate != null" >
        validDate,
      </if>
      <if test="cardtype != null" >
        cardType,
      </if>
      <if test="sportscount != null" >
        sportsCount,
      </if>
      <if test="cardtypename != null" >
        cardTypeName,
      </if>
      <if test="carddiscount != null" >
        cardDiscount,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="surplusstock != null" >
        surplusStock,
      </if>
      <if test="iscashback != null" >
        isCashBack,
      </if>
      <if test="backmoney != null" >
        backMoney,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="isdel != null" >
        isdel,
      </if>
      <if test="isstop != null" >
        isstop,
      </if>
      <if test="regionsid != null" >
        regionsId,
      </if>
      <if test="opeartionadminid != null" >
        opeartionAdminId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cardid != null" >
        #{cardid,jdbcType=INTEGER},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=VARCHAR},
      </if>
      <if test="validdate != null" >
        #{validdate,jdbcType=INTEGER},
      </if>
      <if test="cardtype != null" >
        #{cardtype,jdbcType=VARCHAR},
      </if>
      <if test="sportscount != null" >
        #{sportscount,jdbcType=INTEGER},
      </if>
      <if test="cardtypename != null" >
        #{cardtypename,jdbcType=VARCHAR},
      </if>
      <if test="carddiscount != null" >
        #{carddiscount,jdbcType=REAL},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="surplusstock != null" >
        #{surplusstock,jdbcType=INTEGER},
      </if>
      <if test="iscashback != null" >
        #{iscashback,jdbcType=INTEGER},
      </if>
      <if test="backmoney != null" >
        #{backmoney,jdbcType=DOUBLE},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null" >
        #{isdel,jdbcType=VARCHAR},
      </if>
      <if test="isstop != null" >
        #{isstop,jdbcType=VARCHAR},
      </if>
      <if test="regionsid != null" >
        #{regionsid,jdbcType=VARCHAR},
      </if>
      <if test="opeartionadminid != null" >
        #{opeartionadminid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yundongjia.oa.admin.po.TCardTypeExample" resultType="java.lang.Integer" >
    select count(*) from t_card_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_card_type
    <set >
      <if test="record.cardid != null" >
        cardId = #{record.cardid,jdbcType=INTEGER},
      </if>
      <if test="record.createdate != null" >
        createDate = #{record.createdate,jdbcType=VARCHAR},
      </if>
      <if test="record.validdate != null" >
        validDate = #{record.validdate,jdbcType=INTEGER},
      </if>
      <if test="record.cardtype != null" >
        cardType = #{record.cardtype,jdbcType=VARCHAR},
      </if>
      <if test="record.sportscount != null" >
        sportsCount = #{record.sportscount,jdbcType=INTEGER},
      </if>
      <if test="record.cardtypename != null" >
        cardTypeName = #{record.cardtypename,jdbcType=VARCHAR},
      </if>
      <if test="record.carddiscount != null" >
        cardDiscount = #{record.carddiscount,jdbcType=REAL},
      </if>
      <if test="record.stock != null" >
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.surplusstock != null" >
        surplusStock = #{record.surplusstock,jdbcType=INTEGER},
      </if>
      <if test="record.iscashback != null" >
        isCashBack = #{record.iscashback,jdbcType=INTEGER},
      </if>
      <if test="record.backmoney != null" >
        backMoney = #{record.backmoney,jdbcType=DOUBLE},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=VARCHAR},
      </if>
      <if test="record.isdel != null" >
        isdel = #{record.isdel,jdbcType=VARCHAR},
      </if>
      <if test="record.isstop != null" >
        isstop = #{record.isstop,jdbcType=VARCHAR},
      </if>
      <if test="record.regionsid != null" >
        regionsId = #{record.regionsid,jdbcType=VARCHAR},
      </if>
      <if test="record.opeartionadminid != null" >
        opeartionAdminId = #{record.opeartionadminid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_card_type
    set cardId = #{record.cardid,jdbcType=INTEGER},
      createDate = #{record.createdate,jdbcType=VARCHAR},
      validDate = #{record.validdate,jdbcType=INTEGER},
      cardType = #{record.cardtype,jdbcType=VARCHAR},
      sportsCount = #{record.sportscount,jdbcType=INTEGER},
      cardTypeName = #{record.cardtypename,jdbcType=VARCHAR},
      cardDiscount = #{record.carddiscount,jdbcType=REAL},
      stock = #{record.stock,jdbcType=INTEGER},
      surplusStock = #{record.surplusstock,jdbcType=INTEGER},
      isCashBack = #{record.iscashback,jdbcType=INTEGER},
      backMoney = #{record.backmoney,jdbcType=DOUBLE},
      amount = #{record.amount,jdbcType=VARCHAR},
      isdel = #{record.isdel,jdbcType=VARCHAR},
      isstop = #{record.isstop,jdbcType=VARCHAR},
      regionsId = #{record.regionsid,jdbcType=VARCHAR},
      opeartionAdminId = #{record.opeartionadminid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yundongjia.oa.admin.po.TCardType" >
    update t_card_type
    <set >
      <if test="createdate != null" >
        createDate = #{createdate,jdbcType=VARCHAR},
      </if>
      <if test="validdate != null" >
        validDate = #{validdate,jdbcType=INTEGER},
      </if>
      <if test="cardtype != null" >
        cardType = #{cardtype,jdbcType=VARCHAR},
      </if>
      <if test="sportscount != null" >
        sportsCount = #{sportscount,jdbcType=INTEGER},
      </if>
      <if test="cardtypename != null" >
        cardTypeName = #{cardtypename,jdbcType=VARCHAR},
      </if>
      <if test="carddiscount != null" >
        cardDiscount = #{carddiscount,jdbcType=REAL},
      </if>
      <if test="stock != null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="surplusstock != null" >
        surplusStock = #{surplusstock,jdbcType=INTEGER},
      </if>
      <if test="iscashback != null" >
        isCashBack = #{iscashback,jdbcType=INTEGER},
      </if>
      <if test="backmoney != null" >
        backMoney = #{backmoney,jdbcType=DOUBLE},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null" >
        isdel = #{isdel,jdbcType=VARCHAR},
      </if>
      <if test="isstop != null" >
        isstop = #{isstop,jdbcType=VARCHAR},
      </if>
      <if test="regionsid != null" >
        regionsId = #{regionsid,jdbcType=VARCHAR},
      </if>
      <if test="opeartionadminid != null" >
        opeartionAdminId = #{opeartionadminid,jdbcType=INTEGER},
      </if>
    </set>
    where cardId = #{cardid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yundongjia.oa.admin.po.TCardType" >
    update t_card_type
    set createDate = #{createdate,jdbcType=VARCHAR},
      validDate = #{validdate,jdbcType=INTEGER},
      cardType = #{cardtype,jdbcType=VARCHAR},
      sportsCount = #{sportscount,jdbcType=INTEGER},
      cardTypeName = #{cardtypename,jdbcType=VARCHAR},
      cardDiscount = #{carddiscount,jdbcType=REAL},
      stock = #{stock,jdbcType=INTEGER},
      surplusStock = #{surplusstock,jdbcType=INTEGER},
      isCashBack = #{iscashback,jdbcType=INTEGER},
      backMoney = #{backmoney,jdbcType=DOUBLE},
      amount = #{amount,jdbcType=VARCHAR},
      isdel = #{isdel,jdbcType=VARCHAR},
      isstop = #{isstop,jdbcType=VARCHAR},
      regionsId = #{regionsid,jdbcType=VARCHAR},
      opeartionAdminId = #{opeartionadminid,jdbcType=INTEGER}
    where cardId = #{cardid,jdbcType=INTEGER}
  </update>
  
  
  <!-- hj 查询可用的企业卡 -->
  <select id="findCardTypeByEnterType" resultMap="BaseResultMap" resultType="java.lang.Integer">
  select * from t_card_type where t_card_type.isdel = 0 and t_card_type.isstop = 0 and t_card_type.cardType = 2
and (t_card_type.surplusStock > 0 or t_card_type.surplusStock = -1) 
<if test="cId != null">
and cardId = #{cId}
</if>
order by cardId desc
  </select>
  
  <!--hj 查询个人卡最低折扣 -->
  <select id="selectMinCardDiscount" resultType="java.lang.Double">
  select cardDiscount from t_card_type 
where cardType = 1
order by cardDiscount asc
limit 1
  </select>
  
</mapper>